optimizer : {
  type: AdamW,
  part: all,
  kwargs: {
  lr : 0.001,
  weight_decay : 0.05
}}

scheduler: {
  type: CosLR,
  kwargs: {
    epochs: 300,
    initial_epochs : 10
}}

dataset : {
  train : { _base_: cfgs/dataset_configs/ShapeNet-55_withnormal.yaml,
            others: {subset: 'train', npoints: 1024, aug_type: ['norm'], corrupt_type: ['clean']}},
  val : { _base_: cfgs/dataset_configs/ShapeNet-55_withnormal.yaml,
            others: {subset: 'test', npoints: 1024, aug_type: ['norm'], corrupt_type: ['clean']}},
  test : { _base_: cfgs/dataset_configs/ShapeNet-55_withnormal.yaml,
            others: {subset: 'test', npoints: 1024, aug_type: ['norm'], corrupt_type: ['clean']}}}

model : {
  NAME: PointCAE_transformer,
  corrupt_type: ['affine_r3', 'Drop-Patch'],
  all_patch: 'False',   ## reconstruct all patch or masked patch only.
  group_size: 32,   ## 64 for 3detr
  num_group: 64,    ## 2048 for 3detr
  loss: cdl2,
  transformer_config: {
#    enc_arch: 3detr,    ## uncomment for 3detr
    rand_ratio: 'True',  ## random sampled from [0.5, 0.9]
    mask_ratio: 0.6,     ## not used actually.
    mask_type: 'rand',
    trans_dim: 384,      ## 256 for 3detr
    encoder_dims: 384,   ## 256 for 3detr
    depth: 12,           ## 3 for 3detr
    drop_path_rate: 0.1,
    num_heads: 6,        ## 4 for 3detr
    decoder_depth: 4,    ## may be short for 3detr
    decoder_num_heads: 6, ## 4 for 3detr
  },
}

normal_weight: 0.0
npoints: 1024
total_bs : 128
step_per_update : 1
max_epoch : 300
loss_type: 'xyz'